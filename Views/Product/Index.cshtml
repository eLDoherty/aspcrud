@model IEnumerable<learnnet.Models.Product>

@{
    ViewBag.Title = "Product List";
    var request = HttpContext.Current.Request;
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">@ViewBag.Description</p>
</div>
<p class="text-action-message">@TempData["message"]</p>
<div class="product-filter">
    @if (ViewBag.Countries != null)
    {
        <select name="filter_product" id="filter_product" class="form-control">
            <option value="all">Search product by country</option>
            @foreach (var item in ViewBag.Countries)
            {
                <option value="@item">@item</option>
            }
        </select>
    }
</div>

@if (Utils.CanEditProduct(Utils.CurrentUserId(User.Identity.Name)))
{
    <div class="is_editor"></div>
}
@if (Utils.CanDeleteProduct(Utils.CurrentUserId(User.Identity.Name)) && Utils.CanEditProduct(Utils.CurrentUserId(User.Identity.Name)))
{
    <div class="appear_is_admin"></div>
}
@if (Utils.CanDeleteProduct(Utils.CurrentUserId(User.Identity.Name)))
{
    <div class="is_deletion"></div>
}

<div class="card-container" id="main_page">
    @if (Model.Any())
    {
        foreach (var item in Model)
        {
            if (item.status == "publish")
            {
                <div class="card-container__item">
                    <div class="card-wrapper">
                        @if (item.trending == "1")
                        {
                            <span class="best-seller">Best Seller</span>
                        }
                        <div class="card-thumbnail">
                            <img src="~/Uploads/@item.thumbnail" alt="@Html.DisplayFor(modelItem => item.name)" />
                        </div>
                        <h2 class="card-title">@Html.DisplayFor(modelItem => item.name)</h2>
                        <p class="card-price">@Html.DisplayFor(modelItem => item.price)</p>
                        <p class="short-description">@(new HtmlString(item.description))</p>
                        <div class="product-category">
                        </div>
                        <div class="card-action">
                            <div class="row">
                                @if (Utils.CanEditProduct(Utils.CurrentUserId(User.Identity.Name)))
                                {
                                    <div class="col-md-6">
                                        @Html.ActionLink("Edit", "Edit", "Product", new { id = item.id }, new { @class = "btn btn-info" })
                                    </div>
                                }
                                @if (Utils.CanDeleteProduct(Utils.CurrentUserId(User.Identity.Name)))
                                {
                                    <div class="col-md-6">
                                        @Html.ActionLink("Delete", "Delete", "Product", new { id = item.id }, new { @class = "btn btn-danger delete_button" })
                                    </div>
                                }      
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    }
</div>
@Html.ActionLink("Index Url", "Pagination", "Product", null, new { @class = "endpoint_pagination_request" })
@Html.ActionLink("Delete", "Delete", "Product", null, new { @class = "btn btn-danger delete_product_link" })
@Html.ActionLink("Edit", "Edit", "Product", null, new { @class = "btn btn-danger edit_product_link" })
@Html.ActionLink("Filter Data", "FilterProduct", "Product", null, new { @class = "endpoint_filter_request" })

<div class="load-more-wrapper">
    <button class="btn btn-success" value="1" id="load_more_product">Load More</button>
</div>

