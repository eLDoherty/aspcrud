@model  IEnumerable<learnnet.Models.User>

<h2>Manage user</h2>
<p style="font-size: 28px;" class="text-action-message">@TempData["message"]</p>

<div class="add-new-category__wrapper">
    <table class="table">
        <tr>
            <th class="col-md-1" id="sortById" data-sorting="ASC" data-name="id">ID <span class="arrow">⬇</span></th>
            <th class="col-md-3"id="sortByName" data-sorting="ASC" data-name="username">Name <span class="arrow">⬇</span></th>
            <th class="col-md-3" id="sortByEmail" data-sorting="ASC" data-name="email">Email <span class="arrow">⬇</span></th>
            <th class="col-md-2" id="sortByRole" data-sorting="ASC" data-name="role">Role <span class="arrow">⬇</span></th>
            <th class="col-md-3">Action</th>
        </tr>
        <tbody id="user_holder">
            @if (Model != null)
            {
                foreach (var user in Model)
                {
                    if (user.username != "superadmin")
                    {
                        <tr>
                            <td class="col-md-1">@user.id</td>
                            <td class="col-md-3">@user.username</td>
                            <td class="col-md-3">@user.email</td>
                            <td class="col-md-2">@user.role</td>
                            <td class="col-md-3">
                                @if (Utils.CanDeleteUser(Utils.CurrentUserId(User.Identity.Name)))
                                {
                                    @Html.ActionLink("Delete", "DeleteUser", "Admin", new { id = user.id }, new { @class = "btn btn-danger" }) <span>|</span>
                                }
                                @if (Utils.CanEditUser(Utils.CurrentUserId(User.Identity.Name)))
                                {
                                    @Html.ActionLink("Edit", "Edit", "Admin", new { id = user.id }, new { @class = "btn btn-info" })
                                }

                            </td>
                        </tr>
                    }
                }
            }

        </tbody>
    </table>
    <div class="user-pagination-wrapper">
        <p class="total-user">Total user record: <span id="total_user">@Utils.TotalUser()</span></p>
        <ul id="step_pagination" class="pagination step-pagination">
        </ul>
        <div class="show-per-page">
            <p>Display per page:</p>
            <select class="form-control" id="userPagination" name="userPagination">
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
            </select>
        </div>
    </div>
    @if (Utils.CanAddUser(Utils.CurrentUserId(User.Identity.Name)))
    {
        @Html.ActionLink("Add User", "AddUser", "Admin", new { area = "" }, new { @class = "btn btn-success" })
    }

</div>

<span id="pagination_order" data-sorting="none" data-name="none"></span>

@Html.ActionLink("Hidden", "PaginationPerPage", "Admin", null, new { @class = "user_list_endpoint" })
@Html.ActionLink("Hidden", "PaginationPerStep", "Admin", null, new { @class = "user_list_endpoint_step" })
@Html.ActionLink("Hidden", "PaginationById", "Admin", null, new { @class = "user_pagination_id" })
@Html.ActionLink("Hidden", "PaginationByUsername", "Admin", null, new { @class = "user_pagination_name" })
@Html.ActionLink("Hidden", "PaginationByEmail", "Admin", null, new { @class = "user_pagination_email" })
@Html.ActionLink("Hidden", "PaginationByRole", "Admin", null, new { @class = "user_pagination_role" })

@if (Utils.CanDeleteUser(Utils.CurrentUserId(User.Identity.Name)))
{
    <div class="user_can_delete"></div>
}
@if (Utils.CanEditUser(Utils.CurrentUserId(User.Identity.Name)))
{
    <div class="user_can_update"></div>
}


