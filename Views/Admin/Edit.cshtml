@model learnnet.Models.User

@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/Shared/_GeneralLayout.cshtml";

}
<div class="edit-user-wrapper">
    <h2>Edit user credentials</h2>
    <h2>@TempData["message"]</h2>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "edit_user_form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            <div id="username_error" class="has-error"></div>
            @Html.ValidationMessageFor(model => Model.username, "", new { @class = "text-danger" })
            @Html.EditorFor(model => Model.username, new { htmlAttributes = new { @class = "form-control add_product_name", placeholder = "Username" } })
        </div>
        <div class="form-group">
            <div id="email_error" class="has-error"></div>
            @Html.ValidationMessageFor(model => Model.email, "", new { @class = "text-danger" })
            @Html.EditorFor(model => Model.email, new { htmlAttributes = new { @class = "form-control add_product_name", placeholder = "Email" } })
        </div>
        <div class="form-group">
            @Html.ValidationMessageFor(model => Model.password, "", new { @class = "text-danger" })
            <input type="password" name="password" class="form-control" placeholder="Create new password" />
        </div>

        foreach (var section in ViewBag.Sections)
        {
            if (section.name == "User" || section.name == "Product" || section.name == "Category" || section.name == "Media")
            {
                <div class="row user-accesbility">
                    <h4>@(section.name + " Accessbility")</h4>
                    <div class="form-group col-md-6 dropdown-wrapper">
                        <select class="form-control role_option" selected="@Model.role" id=@("role" + section.id) name="role[]">
                            <option value="admin" @(Utils.GetSectionRole(section.id, Model.id) == "admin" ? "selected" : "")>Admin</option>
                            <option value="editor" @(Utils.GetSectionRole(section.id, Model.id) == "editor" ? "selected" : "")>Editor</option>
                            <option value="user" @(Utils.GetSectionRole(section.id, Model.id) == "user" ? "selected" : "") readonly="readonly">User</option>
                        </select>
                        <input type="hidden" class="page_id" name="pageId[]" value=@(section.id) />
                    </div>
                    <div class="col-md-6 checkbox-holder">
                        <div class="admin-setting" id="admin_setting">
                            <div class="form-group checkbox-wrapper">
                                <label for=@("addition" + section.id)>Add</label>
                                <input class="hiddenAddition" name="addition[]" value="false" type="hidden" @(Utils.GetAddPermission(Model.id, section.id) ? "disabled" : "") />
                                <input class="addition" id=@("addition" + section.id) value="true" name="addition[]" type="checkbox" @(Utils.GetAddPermission(Model.id, section.id) ? "checked disabled" : "") />
                            </div>
                            <div class="form-group checkbox-wrapper">
                                <label for=@("edition" + section.id)>Edit</label>
                                <input class="hiddenEdition" name="edition[]" value="false" type="hidden" @(Utils.GetEditPermission(Model.id, section.id) ? "disabled" : "") />
                                <input class="edition" id=@("edition" + section.id) value="true" name="edition[]" type="checkbox" @(Utils.GetEditPermission(Model.id, section.id) ? "checked disabled" : "") />
                            </div>
                            <div class="from-group checkbox-wrapper">
                                <label for=@("deletion" + section.id)>Delete</label>
                                <input class="hiddenDeletion" name="deletion[]" value="false" type="hidden" @(Utils.GetDeletePermission(Model.id, section.id) ? "disabled" : "") />
                                <input class="deletion" id=@("deletion" + section.id) value="true" name="deletion[]" type="checkbox" @(Utils.GetDeletePermission(Model.id, section.id) ? "checked disabled" : "") />
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

        <button id="edit_user" type="submit" class="btn btn-info">Change</button>
    }

    <div style="margin-top: 30px;">
        @Html.ActionLink("Back to List", "UserList")
    </div>
</div>

<!-- For jquery selector -->
@if (Utils.GetUserRole(Model.id) == "editor")
{
    <div class="edit_editor"></div>
}
@if (Utils.GetUserRole(Model.id) == "admin")
{
    <div class="edit_admin"></div>
}


